require 'fileutils'
require 'erb'

# Monkey patch the original generator
class GeneratorTestRunner

  @@ceedling = nil
  @@plugin_root = nil
  def self.set_context(ceedling, plugin_root)
    @@ceedling = ceedling
    @@plugin_root = plugin_root
  end

  def run(input_file, output_file, options = nil)
    raise 'This should no be called?'
  end

  def find_tests(source)
    # We just fake that, as we do not need to find the tests
    return []
  end

  def generate(input_file, output_file, tests, used_mocks, testfile_includes)
    # We do not need: input_file, tests, testfile_includes

    fff_is_enabled = PLUGINS_ENABLED.include?('fake_function_framework')
    
    template_data = TestRunnerTemplateData.new(fff_is_enabled, used_mocks)


    # Create the mock_interface implementation
    impl_template = @@ceedling[:file_wrapper].read( File.join( @@plugin_root, 'assets/template.erb') )
    renderer = ERB.new(impl_template)


    File.open(output_file, 'w') do |f|
      f.puts '/* AUTOGENERATED FILE, PLEASE DO NOT EDIT */'
      f.puts renderer.result(template_data.get_binding)
    end

  end

end

class TestRunnerTemplateData
  @fff_is_enabled = true
  @used_mocks = nil
  def initialize(fff_is_enabled, used_mocks)
    @fff_is_enabled = fff_is_enabled
    @used_mocks = used_mocks
  end

  def get_binding
    binding
  end

end