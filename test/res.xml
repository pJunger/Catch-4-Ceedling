<?xml version="1.0" encoding="UTF-8"?>
<Catch name="test_the_source.exe">
  <Group name="test_the_source.exe">
    <TestCase name="Blabla" tags="[blub]" filename="test/test_the_source.c" line="6">
      <Expression success="true" type="REQUIRE" filename="test/test_the_source.c" line="8">
        <Original>
          returns_ten() == 25
        </Original>
        <Expanded>
          25 == 25
        </Expanded>
      </Expression>
      <Expression success="false" type="REQUIRE" filename="test/test_the_source.c" line="9">
        <Original>
          intfunc_fake.call_count == 3
        </Original>
        <Expanded>
          1 == 3
        </Expanded>
      </Expression>
      <OverallResult success="false"/>
    </TestCase>
    <TestCase name="This shall fail" tags="[!shouldfail]" filename="test/test_the_source.c" line="12">
      <Expression success="true" type="REQUIRE" filename="test/test_the_source.c" line="14">
        <Original>
          returns_ten() == 25
        </Original>
        <Expanded>
          25 == 25
        </Expanded>
      </Expression>
      <Expression success="true" type="REQUIRE" filename="test/test_the_source.c" line="15">
        <Original>
          intfunc_fake.call_count == 1
        </Original>
        <Expanded>
          1 == 1
        </Expanded>
      </Expression>
      <OverallResult success="false"/>
    </TestCase>
    <TestCase name="This may fail" tags="[!mayfail]" filename="test/test_the_source.c" line="18">
      <Expression success="true" type="REQUIRE" filename="test/test_the_source.c" line="20">
        <Original>
          returns_ten() == 25
        </Original>
        <Expanded>
          25 == 25
        </Expanded>
      </Expression>
      <Expression success="true" type="REQUIRE" filename="test/test_the_source.c" line="21">
        <Original>
          intfunc_fake.call_count == 1
        </Original>
        <Expanded>
          1 == 1
        </Expanded>
      </Expression>
      <OverallResult success="true"/>
    </TestCase>
    <TestCase name="hey, its stupid" tags="[fact]" filename="test/test_the_source.c" line="24">
      <Section name="Oh, a section" filename="test/test_the_source.c" line="26">
        <Expression success="true" type="REQUIRE" filename="test/test_the_source.c" line="27">
          <Original>
            returns_ten() == 99
          </Original>
          <Expanded>
            99 == 99
          </Expanded>
        </Expression>
        <Expression success="true" type="REQUIRE" filename="test/test_the_source.c" line="28">
          <Original>
            intfunc_fake.call_count == 1
          </Original>
          <Expanded>
            1 == 1
          </Expanded>
        </Expression>
        <OverallResults successes="2" failures="0" expectedFailures="0"/>
      </Section>
      <OverallResult success="true"/>
    </TestCase>
    <TestCase name="Scenario: The returns function" tags="[returns]" filename="test/test_the_source.c" line="33">
      <Section name="Given: The func without input params" filename="test/test_the_source.c" line="34">
        <Section name="When: returns_ten() is called" filename="test/test_the_source.c" line="36">
          <Section name="Then: 9 is returned" filename="test/test_the_source.c" line="39">
            <Expression success="true" type="REQUIRE" filename="test/test_the_source.c" line="40">
              <Original>
                intfunc_fake.call_count == 1
              </Original>
              <Expanded>
                1 == 1
              </Expanded>
            </Expression>
            <Expression success="true" type="REQUIRE" filename="test/test_the_source.c" line="41">
              <Original>
                actual == 9
              </Original>
              <Expanded>
                9 == 9
              </Expanded>
            </Expression>
            <OverallResults successes="2" failures="0" expectedFailures="0"/>
          </Section>
          <OverallResults successes="2" failures="0" expectedFailures="0"/>
        </Section>
        <OverallResults successes="2" failures="0" expectedFailures="0"/>
      </Section>
      <Section name="Given: The func without input params" filename="test/test_the_source.c" line="34">
        <Section name="When: returns_ten() is called" filename="test/test_the_source.c" line="36">
          <Section name="Then: 12 is returned" filename="test/test_the_source.c" line="43">
            <Expression success="true" type="REQUIRE" filename="test/test_the_source.c" line="44">
              <Original>
                intfunc_fake.call_count == 1
              </Original>
              <Expanded>
                1 == 1
              </Expanded>
            </Expression>
            <Expression success="true" type="REQUIRE" filename="test/test_the_source.c" line="45">
              <Original>
                actual == 9
              </Original>
              <Expanded>
                9 == 9
              </Expanded>
            </Expression>
            <OverallResults successes="2" failures="0" expectedFailures="0"/>
          </Section>
          <OverallResults successes="2" failures="0" expectedFailures="0"/>
        </Section>
        <OverallResults successes="2" failures="0" expectedFailures="0"/>
      </Section>
      <Section name="Given: The func without input params" filename="test/test_the_source.c" line="34">
        <Section name="When: returns_ten() is called  twice" filename="test/test_the_source.c" line="49">
          <Section name="Then: 11 is returned" filename="test/test_the_source.c" line="52">
            <Expression success="true" type="REQUIRE" filename="test/test_the_source.c" line="53">
              <Original>
                intfunc_fake.call_count == 1
              </Original>
              <Expanded>
                1 == 1
              </Expanded>
            </Expression>
            <Expression success="true" type="REQUIRE" filename="test/test_the_source.c" line="54">
              <Original>
                actual == 9
              </Original>
              <Expanded>
                9 == 9
              </Expanded>
            </Expression>
            <OverallResults successes="2" failures="0" expectedFailures="0"/>
          </Section>
          <OverallResults successes="2" failures="0" expectedFailures="0"/>
        </Section>
        <OverallResults successes="2" failures="0" expectedFailures="0"/>
      </Section>
      <Section name="Given: The func without input params, but now correct" filename="test/test_the_source.c" line="59">
        <Section name="When: returns_ten() is called" filename="test/test_the_source.c" line="61">
          <Section name="Then: 10 is returned" filename="test/test_the_source.c" line="64">
            <Expression success="true" type="REQUIRE" filename="test/test_the_source.c" line="65">
              <Original>
                actual == 10
              </Original>
              <Expanded>
                10 == 10
              </Expanded>
            </Expression>
            <Expression success="true" type="REQUIRE" filename="test/test_the_source.c" line="66">
              <Original>
                intfunc_fake.call_count == 1
              </Original>
              <Expanded>
                1 == 1
              </Expanded>
            </Expression>
            <OverallResults successes="2" failures="0" expectedFailures="0"/>
          </Section>
          <OverallResults successes="2" failures="0" expectedFailures="0"/>
        </Section>
        <OverallResults successes="2" failures="0" expectedFailures="0"/>
      </Section>
      <OverallResult success="true"/>
    </TestCase>
    <OverallResults successes="15" failures="2" expectedFailures="0"/>
  </Group>
  <OverallResults successes="15" failures="1" expectedFailures="0"/>
</Catch>                                                                                                                                                                      